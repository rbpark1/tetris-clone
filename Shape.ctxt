#BlueJ class context
comment0.params=
comment0.target=Shape()
comment0.text=\n\ Constructor\ for\ a\ shape\ object\ which\ each\ piece\ will\ need\ in\ order\ to\ function.\n
comment1.params=
comment1.target=boolean\ canMoveLeft()
comment1.text=\n\ Method\ that\ checks\ if\ all\ Blocks\ in\ a\ piece\ can\ move\ left.\n\ @return\ -\ If\ true,\ the\ entire\ piece\ can\ move\ left.\ If\ false,\ then\ the\ piece\ cannot\ move\ left.\n
comment10.params=
comment10.target=void\ incTimer()
comment10.text=\n\ Incrementer\ method\ that\ increments\ the\ timer\ variable.\n
comment11.params=
comment11.target=boolean\ end()
comment11.text=\n\ Boolean\ method\ that\ checks\ if\ the\ piece\ contains\ a\ block\ that\ is\ dead.\n\ @return\ True\ if\ piece\ contains\ dead\ block,\ false\ if\ otherwise.\n
comment2.params=
comment2.target=boolean\ canMoveRight()
comment2.text=\n\ Method\ that\ checks\ if\ all\ Blocks\ in\ a\ piece\ can\ move\ right.\n\ @return\ -\ If\ true,\ the\ entire\ piece\ can\ move\ right.\ If\ false,\ then\ the\ piece\ cannot\ move\ right.\n
comment3.params=
comment3.target=boolean\ canMoveDown()
comment3.text=\n\ Method\ that\ checks\ if\ all\ BLocks\ in\ a\ piece\ can\ move\ down.\n\ @return\ -\ If\ true,\ the\ entire\ piece\ can\ move\ down.\ If\ false,\ then\ it\ cannot\ move\ down.\n
comment4.params=
comment4.target=void\ moveDown()
comment4.text=\n\ Method\ that\ uses\ the\ canMoveDown()\ to\ determine\ if\ it\ can\ move\ down\ or\ not.\ If\ that\ method\ returns\ true,\ then\ this\ method\ will\ move\n\ all\ the\ blocks\ of\ the\ piece\ down.\n
comment5.params=b
comment5.target=boolean\ contains(greenfoot.Actor)
comment5.text=\n\ Method\ that\ checks\ if\ the\ given\ block\ comes\ from\ the\ same\ class\ but\ a\ different\ object\ of\ it.\n\ @param\ b\ -\ The\ block\ that\ will\ be\ checked.\n\ @return\ -\ True\ if\ similar\ block,\ false\ if\ otherwise.\n
comment6.params=l
comment6.target=boolean\ contains(java.util.List)
comment6.text=\n\ Method\ that\ checks\ if\ the\ given\ ArrayList\ contains\ a\ Block()\ object\ that\ is\ similar\ to\ the\ Block()\ objects\ of\ this\ class.\n\ @param\ l\ -\ The\ ArrayList\ of\ Blocks()\ that\ will\ be\ checked.\n\ @return\ True\ if\ blocks\ are\ similar,\ false\ if\ otherwise.\n
comment7.params=
comment7.target=Block[]\ getList()
comment7.text=\n\ Getter\ method\ that\ returns\ the\ array\ of\ Block()\ objects\ (parts).\n\ @return\ -\ The\ array\ of\ Block()\ objects\ (parts).\n
comment8.params=
comment8.target=boolean\ getAlive()
comment8.text=\n\ Getter\ method\ that\ returns\ the\ isAlive\ variable\ (Which\ is\ used\ to\ determine\ if\ the\ piece\ is\ dead\ or\ not.)\n\ @return\ isAlive\ variable.\n
comment9.params=b
comment9.target=void\ setAlive(boolean)
comment9.text=\n\ Setter\ method\ that\ sets\ the\ isAlive\ variable\ to\ the\ given\ value.\n\ @param\ b\ True\ or\ false;\n
numComments=12
