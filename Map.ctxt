#BlueJ class context
comment0.params=
comment0.target=void\ spawn()
comment0.text=\n\ Method\ that\ spawns\ a\ new\ tetronimo\ piece\ into\ the\ world.\ This\ method\ will\n\ be\ repeatedly\ called\ to\ spawn\ more\ pieces.\n
comment1.params=
comment1.target=void\ spawnJ()
comment1.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ J_Piece()\ object\n\ into\ the\ world.\n
comment10.params=
comment10.target=void\ checkLine()
comment10.text=\n\ Method\ that\ uses\ iterators\ to\ check\ if\ a\ line\ is\ completed\ in\ the\ grid.\n\ If\ it\ iteratively\ finds\ one,\ it\ destroys\ the\ line\ then\ moves\ all\ blocks\n\ above\ it\ one\ cell\ downwards.\ If\ there\ are\ more\ than\ one\ line,\ then\ all\n\ blocks\ will\ be\ moved\ down\ to\ the\ lowest\ line\ that\ was\ destroyed.\n
comment11.params=x\ list
comment11.target=void\ recursivelyRemove(int,\ java.util.ArrayList)
comment11.text=\n\ Recursive\ method\ that\ removes\ from\ the\ world\ all\ elements\ in\ the\ inputted\ ArrayList\n\ @param1\ x\ -\ size\ of\ the\ arrayList\n\ @param2\ list\ -\ designated\ arrayList\n
comment2.params=
comment2.target=void\ spawnI()
comment2.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ I_Piece()\ object\n\ into\ the\ world.\n
comment3.params=
comment3.target=void\ spawnL()
comment3.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ L_Piece()\ object\n\ into\ the\ world.\n
comment4.params=
comment4.target=void\ spawnS()
comment4.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ S_Piece()\ object\n\ into\ the\ world.\n
comment5.params=
comment5.target=void\ spawnZ()
comment5.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ Z_Piece()\ object\n\ into\ the\ world.\n
comment6.params=
comment6.target=void\ spawnO()
comment6.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ O_Piece()\ object\n\ into\ the\ world.\n
comment7.params=
comment7.target=void\ spawnT()
comment7.text=\n\ Method\ that\ spawns\ that\ declares,\ intializes,\ and\ adds\ a\ T_Piece()\ object\n\ into\ the\ world.\n
comment8.params=
comment8.target=Map()
comment8.text=\n\ Constructor\ for\ objects\ of\ class\ Map.\n\ \n
comment9.params=
comment9.target=void\ act()
comment9.text=\n\ Method\ that\ checks\ if\ the\ current\ operational\ piece\ is\ still\ alive.\ If\ it\n\ has\ reached\ the\ very\ bottom\ or\ the\ top\ of\ a\ dead\ piece,\ this\ method\ will\n\ cause\ the\ world\ to\ spawn\ a\ new\ random\ piece\ at\ the\ very\ top\ of\ the\ grid.\n
numComments=12
